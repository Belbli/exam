package com.github.belbli.topic9;

// –≠—Ç–æ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º.
//e reg


import java.util.Scanner;

/**
 * –≠—Ç–æ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
 * –í –Ω–µ–º –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∫ –∫–æ–¥—É –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞—Ç—å —á–∞—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
 */
public class Main {  // 'BasicsExample' ‚Äî —ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (–∏–º—è –∫–ª–∞—Å—Å–∞)

    static final String WORD_WORD = "efwf";

    public static void main(String[] args) {
        // ‚ñ™Ô∏è –õ–µ–∫—Å–µ–º—ã ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã —è–∑—ã–∫–∞: —Å–ª–æ–≤–∞, —á–∏—Å–ª–∞, —Å–∏–º–≤–æ–ª—ã, –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ —Ç.–¥.

        // üîπ –ê–ª—Ñ–∞–≤–∏—Ç Java: –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, +, -, *, =, –∏ –¥—Ä.)

        // üîπ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ (keywords): –∏–º–µ—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:
        int number = 10; // int ‚Äî –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ (—Ç–∏–ø), number ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, 10 ‚Äî —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞

        final double PI = 3.14159; // final ‚Äî –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, PI ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (–≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –ø—Ä–∏–Ω—è—Ç–æ –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç)

        String name = "Alice"; // String ‚Äî —Å—Å—ã–ª–æ—á–Ω—ã–π —Ç–∏–ø, "Alice" ‚Äî —Å—Ç—Ä–æ–∫–æ–≤–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞

        char letter = 'A'; // char ‚Äî —Å–∏–º–≤–æ–ª—å–Ω—ã–π —Ç–∏–ø, 'A' ‚Äî —Å–∏–º–≤–æ–ª—å–Ω–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞

        boolean isJavaFun = true; // boolean ‚Äî –ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–∏–ø, true ‚Äî –ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞

        // üî∏ –û–ø–µ—Ä–∞—Ç–æ—Ä—ã:
        int a = 5 + 3;     // + ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–∂–µ–Ω–∏—è
        int b = a * 2;     // * ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä —É–º–Ω–æ–∂–µ–Ω–∏—è
        int c = b - 4;     // - ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤—ã—á–∏—Ç–∞–Ω–∏—è
        int d = c / 2;     // / ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–µ–ª–µ–Ω–∏—è
        int e = d % 3;     // % ‚Äî –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è

        // üî∏ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π:
        // * –∏ / –∏–º–µ—é—Ç –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —á–µ–º + –∏ -
        int result = 2 + 3 * 4; // result = 2 + (3 * 4) = 14
        int result2 = (2 + 3) * 4; // —Å–∫–æ–±–∫–∏ –º–µ–Ω—è—é—Ç –ø–æ—Ä—è–¥–æ–∫: (2 + 3) * 4 = 20

        System.out.println(10/3.0);

        // üî∏ –í—ã—Ä–∞–∂–µ–Ω–∏—è:
        int x = 10;
        int y = 20;
        int max = (true) ? x : y; // —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ‚Äî –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ –±–æ–ª—å—à–µ–µ –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª

        // üîπ –í—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω:
        System.out.println("Max: " + max); // –û–ø–µ—Ä–∞—Ç–æ—Ä + —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫

        // üîπ –£—Å–ª–æ–≤–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (—Å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö):

        // üîπ –¶–∏–∫–ª ‚Äî —Ç–æ–∂–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –≤—ã–ø–æ–ª–Ω—è—é—â–µ–µ—Å—è –ø–æ —É—Å–ª–æ–≤–∏—é
        for (int i = 0; i < 5; i++) {
            System.out.println("–ò—Ç–µ—Ä–∞—Ü–∏—è " + i);
        }


        //===================================================================================================

        // ‚ñ∂Ô∏è 1. –í–≤–æ–¥/–≤—ã–≤–æ–¥:
        Scanner scanner = new Scanner(System.in); // —Å–æ–∑–¥–∞—ë–º —Å–∫–∞–Ω–µ—Ä –¥–ª—è –≤–≤–æ–¥–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: "); // –≤—ã–≤–æ–¥ –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        String name2 = scanner.nextLine(); // –≤–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏

        System.out.println("–ü—Ä–∏–≤–µ—Ç, " + name2 + "!"); // –≤—ã–≤–æ–¥ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ç—Ä–æ–∫–∏

        // ‚ñ∂Ô∏è 2. –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è:
        int a1 = 5; // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        a += 3;    // —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ a = a + 3;
        a *= 2;    // —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ a = a * 2;

        // ‚ñ∂Ô∏è 3. –ü—É—Å—Ç–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä:
        // –í Java –ø—É—Å—Ç–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π
        ; // –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç

        // ‚ñ∂Ô∏è 4. –£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä if-else:
        if (a == 1) {

        } else {

        }
        if (a1 > 10) {
            System.out.println("a –±–æ–ª—å—à–µ 10");
        } else if (a1 == 10) {
            System.out.println("a —Ä–∞–≤–Ω–æ 10");
        } else {
            System.out.println("a –º–µ–Ω—å—à–µ 10");
        }

        // ‚ñ∂Ô∏è 5. –û–ø–µ—Ä–∞—Ç–æ—Ä –≤—ã–±–æ—Ä–∞ switch-case:
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (1-7): ");
        int day = scanner.nextInt();

        switch (day) {
            case 1:
                System.out.println("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
                break;
            case 2:
                System.out.println("–í—Ç–æ—Ä–Ω–∏–∫");
                break;
            case 3:
                System.out.println("–°—Ä–µ–¥–∞");
                break;
            case 4:
                System.out.println("–ß–µ—Ç–≤–µ—Ä–≥");
                break;
            case 5:
                System.out.println("–ü—è—Ç–Ω–∏—Ü–∞");
                break;
            case 6:
            case 7:
                System.out.println("–í—ã—Ö–æ–¥–Ω–æ–π");
                break;
            default:
                System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è");
        }

        // ‚ñ∂Ô∏è 6. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ü–∏–∫–ª–æ–≤:
        // ‚Äî while: —Ü–∏–∫–ª —Å –ø—Ä–µ–¥—É—Å–ª–æ–≤–∏–µ–º
        short count = 0;
        while (count > -1) {
            System.out.println("while: " + count);
            count++;
        }

        // ‚Äî do-while: —Ü–∏–∫–ª —Å –ø–æ—Å—Ç—É—Å–ª–æ–≤–∏–µ–º (–≤—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã —Ä–∞–∑)
        int n = 0;
        do {
            System.out.println("do-while: " + n);
            n++;
        } while (n < 2);

        // ‚Äî for: —Ü–∏–∫–ª —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π, —É—Å–ª–æ–≤–∏–µ–º –∏ —à–∞–≥–æ–º
        for (int i = 0; i < 3; i++) {
            System.out.println("for: " + i);
        }


        // ‚ñ∂Ô∏è 8. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
        int max1 = Math.max(100, 200); // Math ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
        double sqrt = Math.sqrt(25);  // –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è
        System.out.println("–ú–∞–∫—Å–∏–º—É–º: " + max1 + ", –∫–æ—Ä–µ–Ω—å: " + sqrt);

        // ‚ñ∂Ô∏è 9. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–¥—É–ª—è:
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
        sayGoodbye(name);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º Scanner (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ —Ö–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞)
        scanner.close();
    }

    // –ü—Ä–∏–º–µ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ‚Äî –º–µ—Ç–æ–¥ (–≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —è–∑—ã–∫–∞—Ö —Ñ—É–Ω–∫—Ü–∏—è)
    static void sayGoodbye(String userName) {
        System.out.println("–ü–æ–∫–∞, " + userName + "!");
    }
}